{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { StatusBar } from 'expo-status-bar';\nimport { Ionicons } from '@expo/vector-icons';\nimport ClientFormScreen from \"./screens/ClientFormScreen\";\nimport RealtorDashboardScreen from \"./screens/RealtorDashboardScreen\";\nimport AgreementsScreen from \"./screens/AgreementsScreen\";\nimport ClientsScreen from \"./screens/ClientsScreen\";\nimport OpenHousesScreen from \"./screens/OpenHousesScreen\";\nimport AnalyticsScreen from \"./screens/AnalyticsScreen\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\nfunction RealtorTabs() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n            color = _ref2.color,\n            size = _ref2.size;\n          var iconName;\n          if (route.name === 'Agreements') {\n            iconName = focused ? 'document-text' : 'document-text-outline';\n          } else if (route.name === 'Clients') {\n            iconName = focused ? 'people' : 'people-outline';\n          } else if (route.name === 'Open Houses') {\n            iconName = focused ? 'home' : 'home-outline';\n          } else if (route.name === 'Analytics') {\n            iconName = focused ? 'analytics' : 'analytics-outline';\n          }\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: '#4F46E5',\n        tabBarInactiveTintColor: 'gray',\n        headerShown: false\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Agreements\",\n      component: AgreementsScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Clients\",\n      component: ClientsScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Open Houses\",\n      component: OpenHousesScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Analytics\",\n      component: AnalyticsScreen\n    })]\n  });\n}\nexport default function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isRealtorMode = _useState2[0],\n    setIsRealtorMode = _useState2[1];\n  return _jsxs(NavigationContainer, {\n    children: [_jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsxs(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      children: [_jsx(Stack.Screen, {\n        name: \"ClientForm\",\n        component: ClientFormScreen\n      }), _jsx(Stack.Screen, {\n        name: \"RealtorDashboard\",\n        component: RealtorTabs\n      })]\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","NavigationContainer","createStackNavigator","createBottomTabNavigator","StatusBar","Ionicons","ClientFormScreen","RealtorDashboardScreen","AgreementsScreen","ClientsScreen","OpenHousesScreen","AnalyticsScreen","jsx","_jsx","jsxs","_jsxs","Stack","Tab","RealtorTabs","Navigator","screenOptions","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","headerShown","children","Screen","component","App","_useState","_useState2","_slicedToArray","isRealtorMode","setIsRealtorMode","style"],"sources":["/Users/curranadvani/Desktop/OpenHaus/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { StatusBar } from 'expo-status-bar';\nimport { Ionicons } from '@expo/vector-icons';\n\n// Import screens\nimport ClientFormScreen from './screens/ClientFormScreen';\nimport RealtorDashboardScreen from './screens/RealtorDashboardScreen';\nimport AgreementsScreen from './screens/AgreementsScreen';\nimport ClientsScreen from './screens/ClientsScreen';\nimport OpenHousesScreen from './screens/OpenHousesScreen';\nimport AnalyticsScreen from './screens/AnalyticsScreen';\n\nconst Stack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nfunction RealtorTabs() {\n  return (\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n\n          if (route.name === 'Agreements') {\n            iconName = focused ? 'document-text' : 'document-text-outline';\n          } else if (route.name === 'Clients') {\n            iconName = focused ? 'people' : 'people-outline';\n          } else if (route.name === 'Open Houses') {\n            iconName = focused ? 'home' : 'home-outline';\n          } else if (route.name === 'Analytics') {\n            iconName = focused ? 'analytics' : 'analytics-outline';\n          }\n\n          return <Ionicons name={iconName} size={size} color={color} />;\n        },\n        tabBarActiveTintColor: '#4F46E5',\n        tabBarInactiveTintColor: 'gray',\n        headerShown: false,\n      })}\n    >\n      <Tab.Screen name=\"Agreements\" component={AgreementsScreen} />\n      <Tab.Screen name=\"Clients\" component={ClientsScreen} />\n      <Tab.Screen name=\"Open Houses\" component={OpenHousesScreen} />\n      <Tab.Screen name=\"Analytics\" component={AnalyticsScreen} />\n    </Tab.Navigator>\n  );\n}\n\nexport default function App() {\n  const [isRealtorMode, setIsRealtorMode] = useState(false);\n\n  return (\n    <NavigationContainer>\n      <StatusBar style=\"auto\" />\n      <Stack.Navigator screenOptions={{ headerShown: false }}>\n        <Stack.Screen name=\"ClientForm\" component={ClientFormScreen} />\n        <Stack.Screen name=\"RealtorDashboard\" component={RealtorTabs} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}