import jsPDF from 'jspdf';
import html2canvas from 'html2canvas';

export const generatePDF = async (agreementData) => {
  const pdf = new jsPDF('p', 'mm', 'a4');
  
  // Add header
  pdf.setFontSize(20);
  pdf.setTextColor(79, 70, 229); // Blue color
  pdf.text('HomeShow', 20, 20);
  
  pdf.setFontSize(12);
  pdf.setTextColor(0, 0, 0);
  pdf.text('Meeting Agreement', 20, 35);
  
  // Add realtor info
  pdf.setFontSize(14);
  pdf.text('Realtor Information:', 20, 50);
  pdf.setFontSize(10);
  pdf.text(`Name: ${agreementData.realtor.name}`, 20, 60);
  pdf.text(`Company: ${agreementData.realtor.company}`, 20, 67);
  pdf.text(`License: ${agreementData.realtor.license}`, 20, 74);
  pdf.text(`Phone: ${agreementData.realtor.phone}`, 20, 81);
  pdf.text(`Email: ${agreementData.realtor.email}`, 20, 88);
  
  // Add client info
  pdf.setFontSize(14);
  pdf.text('Client Information:', 20, 105);
  pdf.setFontSize(10);
  pdf.text(`Name: ${agreementData.client.name}`, 20, 115);
  pdf.text(`Phone: ${agreementData.client.phone}`, 20, 122);
  
  // Add agreement details
  pdf.setFontSize(14);
  pdf.text('Agreement Details:', 20, 140);
  pdf.setFontSize(10);
  pdf.text(`Meeting Type: ${agreementData.meetingType}`, 20, 150);
  pdf.text(`State: ${agreementData.state}`, 20, 157);
  pdf.text(`Date: ${new Date(agreementData.createdAt).toLocaleDateString()}`, 20, 164);
  
  // Add agreement text
  pdf.setFontSize(12);
  pdf.text('Agreement Text:', 20, 180);
  pdf.setFontSize(10);
  
  const splitText = pdf.splitTextToSize(agreementData.agreementText, 170);
  pdf.text(splitText, 20, 190);
  
  // Add signature section
  const signatureY = 250;
  pdf.setFontSize(12);
  pdf.text('Electronic Signature:', 20, signatureY);
  pdf.text('_________________', 20, signatureY + 10);
  pdf.setFontSize(8);
  pdf.text(`Signed: ${new Date(agreementData.signedAt).toLocaleString()}`, 20, signatureY + 20);
  pdf.text(`IP Address: ${agreementData.auditTrail.clientIP}`, 20, signatureY + 27);
  
  // Add footer
  pdf.setFontSize(8);
  pdf.setTextColor(128, 128, 128);
  pdf.text('This document was generated by HomeShow and is legally binding.', 20, 280);
  pdf.text(`Document ID: ${agreementData.id}`, 20, 287);
  
  return pdf;
};

export const downloadPDF = async (agreementData) => {
  try {
    const pdf = await generatePDF(agreementData);
    const fileName = `homeshow-agreement-${agreementData.id}.pdf`;
    pdf.save(fileName);
    return fileName;
  } catch (error) {
    console.error('Error generating PDF:', error);
    throw error;
  }
}; 